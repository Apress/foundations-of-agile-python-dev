<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Docutils 0.3.7: http://docutils.sourceforge.net/" />
<title>FIT Distribution</title>
<link rel="stylesheet" href="default.css" type="text/css" />
</head>
<body>
<div class="document" id="fit-distribution">
<h1 class="title">FIT Distribution</h1>
<p>The PyFIT distribution is a series of directories that exist under the fit directory. This top level fit directory contains the <a class="reference" href="Fit_Runners.htm">runners</a>. It is not the fit directory that contains the standard fit package.</p>
<div class="contents topic" id="contents">
<p class="topic-title first"><a name="contents">Contents</a></p>
<ul class="simple">
<li><a class="reference" href="#fit" id="id30" name="id30">1. fit</a></li>
<li><a class="reference" href="#fitlib" id="id31" name="id31">2. fitLib.</a></li>
<li><a class="reference" href="#fitnesse" id="id32" name="id32">3. fitnesse.</a></li>
<li><a class="reference" href="#fat-the-fit-acceptance-tests" id="id33" name="id33">4. fat, the FIT Acceptance Tests.</a></li>
<li><a class="reference" href="#eg-or-the-fit-examples" id="id34" name="id34">5. eg, or the FIT Examples.</a></li>
<li><a class="reference" href="#documentation" id="id35" name="id35">6. Documentation.</a></li>
<li><a class="reference" href="#tests" id="id36" name="id36">7. Tests.</a></li>
</ul>
</div>
<div class="section" id="fit">
<h1><a class="toc-backref" href="#id30" name="fit">1. fit</a></h1>
<blockquote>
<blockquote>
<p>The basic fixtures that come with most implementations of FIT.</p>
<table border="1" class="docutils">
<colgroup>
<col width="43%" />
<col width="57%" />
</colgroup>
<thead valign="bottom">
<tr><th rowspan="2">Fixture Name</th>
<th rowspan="2">Fixture Description</th>
</tr>
<tr></tr>
</thead>
<tbody valign="top">
<tr><td><a class="reference" href="FIT_ActionFixture.htm">ActionFixture</a></td>
<td>Fixture for activity sequences</td>
</tr>
<tr><td><a class="reference" href="FIT_ColumnFixture.htm">ColumnFixture</a></td>
<td>Used for row by row repetitive
processing. Must be subclassed</td>
</tr>
<tr><td>PrimitiveFixture</td>
<td>A sample fixture of mainly
academic interest</td>
</tr>
<tr><td><a class="reference" href="FIT_RowFixture.htm">RowFixture</a></td>
<td>Used to verify the contents of
collections.</td>
</tr>
<tr><td><a class="reference" href="FIT_Summary.htm">Summary</a></td>
<td>Displays collected summary stats.</td>
</tr>
<tr><td>TimedActionFixture</td>
<td>Timed Activity Sequences</td>
</tr>
</tbody>
</table>
<blockquote>
</blockquote>
<p>Fixtures which are either specific to Python FIT, or from other versions of FIT</p>
<table border="1" class="docutils">
<colgroup>
<col width="43%" />
<col width="57%" />
</colgroup>
<thead valign="bottom">
<tr><th rowspan="2">Fixture Name</th>
<th rowspan="2">Fixture Description</th>
</tr>
<tr></tr>
</thead>
<tbody valign="top">
<tr><td><a class="reference" href="FIT_CellHandlers.htm">CellHandlerInspector</a></td>
<td>Displays current cell handlers</td>
</tr>
<tr><td><a class="reference" href="FIT_CellHandlers.htm">CellHandlerLoader</a></td>
<td>Adds and removes cell handlers</td>
</tr>
<tr><td><a class="reference" href="FIT_CommentFixture.htm">Comment</a></td>
<td>Does nothing</td>
</tr>
<tr><td><a class="reference" href="FIT_Import.htm">Import</a></td>
<td>Assigns aliases (Depreciated)</td>
</tr>
</tbody>
</table>
<blockquote>
</blockquote>
<p>Modules that aren't fixtures, but are either necessary for installation tailoring or useful.</p>
<table border="1" class="docutils">
<colgroup>
<col width="35%" />
<col width="65%" />
</colgroup>
<thead valign="bottom">
<tr><th rowspan="2">Name</th>
<th rowspan="2">Description</th>
</tr>
<tr></tr>
</thead>
<tbody valign="top">
<tr><td>ScientificDouble</td>
<td>Floating point wrapper that does
precision right.</td>
</tr>
<tr><td>ScientificFloat</td>
<td>Same as ScientificDouble, can be
used as its own type adapter.</td>
</tr>
<tr><td>SiteOptions</td>
<td>Defaults module for runners</td>
</tr>
</tbody>
</table>
</blockquote>
<p>Implementation modules of no interest to the test writer. Fixture writers may be
interested in some of them.</p>
<blockquote>
<table border="1" class="docutils">
<colgroup>
<col width="39%" />
<col width="61%" />
</colgroup>
<thead valign="bottom">
<tr><th rowspan="2">Component Name</th>
<th rowspan="2">Fixture Description</th>
</tr>
<tr></tr>
</thead>
<tbody valign="top">
<tr><td>Counts</td>
<td>Utility that maintains right, wrong
ignored and exception counts.</td>
</tr>
<tr><td>FitException</td>
<td>Main exception class, all kinds
of interesting goodies.</td>
</tr>
<tr><td>FitGlobals</td>
<td>Contains configuration stuff that
may need to be changed to make it
work.</td>
</tr>
<tr><td>FitNesseExceptions</td>
<td>Exception classes used in Fitnesse.
Will eventually be removed.</td>
</tr>
<tr><td><a class="reference" href="FIT_WritingFixtures.htm">Fixture</a></td>
<td>Base class for all fixtures,
Contains lots of utilities</td>
</tr>
<tr><td>FixtureLoader</td>
<td>Imported module used by Fixture.</td>
</tr>
<tr><td>Options</td>
<td>Utility module used by the runners
to parse and hold options</td>
</tr>
<tr><td><a class="reference" href="FIT_Parse.htm">Parse</a></td>
<td>HTML Parser</td>
</tr>
<tr><td>RunnerImplementation</td>
<td>All batch runners</td>
</tr>
<tr><td>taBase</td>
<td>All the basic type adapters</td>
</tr>
<tr><td>taProtocol</td>
<td>Type Adapter Protocol Handlers</td>
</tr>
<tr><td>taTable</td>
<td>Type Adapter module directory</td>
</tr>
<tr><td><a class="reference" href="FIT_TypeAdapters.htm">TypeAdapter</a></td>
<td>Type Adapter factory methods and
accessors.</td>
</tr>
<tr><td>Utilities</td>
<td>Some stuff that doesn't fit
elsewhere.</td>
</tr>
<tr><td>Variations</td>
<td>Different camel and annotations.
This is unlikely to remain in the
same form next release.</td>
</tr>
</tbody>
</table>
<blockquote>
</blockquote>
</blockquote>
</blockquote>
</div>
<div class="section" id="fitlib">
<h1><a class="toc-backref" href="#id31" name="fitlib">2. fitLib.</a></h1>
<blockquote>
<p>Fixtures which are part of the <a class="reference" href="FitLib_Basic.htm">FitLibrary</a>.</p>
<table border="1" class="docutils">
<colgroup>
<col width="41%" />
<col width="59%" />
</colgroup>
<thead valign="bottom">
<tr><th>Fixture Name</th>
<th>Fixture Description</th>
</tr>
</thead>
<tbody valign="top">
<tr><td><a class="reference" href="FitLib_ArrayFixture.htm">ArrayFixture</a></td>
<td>checks contents of an ordered
collection.</td>
</tr>
<tr><td><a class="reference" href="FitLib_CalculateFixture.htm">CalculateFixture</a></td>
<td>An alternative to ColumnFixture</td>
</tr>
<tr><td><a class="reference" href="FitLib_CombinationFixture.htm">CombinationFixture</a></td>
<td>Verify all combinations of two
variables</td>
</tr>
<tr><td><a class="reference" href="FitLib_ConstraintFixture.htm">ConstraintFixture</a></td>
<td>True or False fixture</td>
</tr>
<tr><td><a class="reference" href="FitLib_DisplayUtility.htm">DisplayUtility</a></td>
<td>An enhancement to the Fit Library
which allows an inline display of
a collection.</td>
</tr>
<tr><td><a class="reference" href="FitLib_DoFixture.htm">DoFixture</a></td>
<td>A highly recommended alternative
to all the rest of the fixtures</td>
</tr>
<tr><td><a class="reference" href="FitLib_DotGraphics.htm">DotGraphics</a></td>
<td>An example of an interface to a
a graphics visualization package.</td>
</tr>
<tr><td>FixtureFixture</td>
<td>Used to test fixtures</td>
</tr>
<tr><td><a class="reference" href="FitLib_ImageFixture.htm">ImageFixture</a></td>
<td>Array of image tags</td>
</tr>
<tr><td><a class="reference" href="FitLib_DoFixture.htm">SequenceFixture</a></td>
<td>Slight variation on DoFixture</td>
</tr>
<tr><td><a class="reference" href="FitLib_SetUpFixture.htm">SetUpFixture</a></td>
<td>Variation on ColumnFixture, used
for setup tasks.</td>
</tr>
<tr><td><a class="reference" href="FitLib_ArrayFixture.htm">SetFixture</a></td>
<td>Variation on RowFixture</td>
</tr>
<tr><td>SpecifyFixture</td>
<td>Used to test fixtures</td>
</tr>
<tr><td><a class="reference" href="FitLib_ArrayFixture.htm">SubsetFixture</a></td>
<td>Same as SetFixture, except that
it only looks for partials.</td>
</tr>
</tbody>
</table>
<p>Implementation modules of no interest to the test writer. Fixture writers may be
interested in some of them.</p>
<table border="1" class="docutils">
<colgroup>
<col width="39%" />
<col width="61%" />
</colgroup>
<thead valign="bottom">
<tr><th rowspan="2">Component Name</th>
<th rowspan="2">Fixture Description</th>
</tr>
<tr></tr>
</thead>
<tbody valign="top">
<tr><td>ExtendedCamelCase</td>
<td>Obsolete. It's currently a proxy for
the camel routine in Fixture.</td>
</tr>
<tr><td>FitLibraryExceptions</td>
<td>being obsoleted in favor of
FitException.</td>
</tr>
<tr><td>FitLibraryFixture</td>
<td>Base class for FitLibrary Fixtures</td>
</tr>
<tr><td>MethodTarget</td>
<td>FitLibrary version of TypeAdapter</td>
</tr>
<tr><td>ParseUtility</td>
<td>FitLibrary included module</td>
</tr>
</tbody>
</table>
<p>The fitLib directory also contains all of the specification tests and a good deal of
documentation, all of which is still Java-centric.</p>
</blockquote>
</div>
<div class="section" id="fitnesse">
<h1><a class="toc-backref" href="#id32" name="fitnesse">3. fitnesse.</a></h1>
<blockquote>
<p>This directory contains a small number of modules for FitNesse, of which the most important
is the FitServerImplementation module. This is the base module for both FitServer and
TestRunner.</p>
<p>While there are a large number of fixtures in the fixtures directory, most of them are
for testing FitNesse. The following are the only fixtures that are generally useful and 
documented within FitNesse.</p>
<table border="1" class="docutils">
<colgroup>
<col width="39%" />
<col width="61%" />
</colgroup>
<thead valign="bottom">
<tr><th rowspan="2">Component Name</th>
<th rowspan="2">Fixture Description</th>
</tr>
<tr></tr>
</thead>
<tbody valign="top">
<tr><td><a class="reference" href="FIT_CommentFixture.htm">Comment</a></td>
<td>Moved to fit directory</td>
</tr>
<tr><td>RowEntryFixture</td>
<td>Not supported. Use <a class="reference" href="FitLib_SetUpFixture.htm">SetUpFixture</a>
from the Fit Library instead.</td>
</tr>
<tr><td><a class="reference" href="FitNesse_TableFixture.htm">TableFixture</a></td>
<td>Handles tables that look like
business forms.</td>
</tr>
</tbody>
</table>
</blockquote>
</div>
<div class="section" id="fat-the-fit-acceptance-tests">
<h1><a class="toc-backref" href="#id33" name="fat-the-fit-acceptance-tests">4. fat, the FIT Acceptance Tests.</a></h1>
<blockquote>
This directory contains everything that's been shipped as FIT acceptance and specification
tests. It's got the fixtures as well as the HTML source and results directories.</blockquote>
</div>
<div class="section" id="eg-or-the-fit-examples">
<h1><a class="toc-backref" href="#id34" name="eg-or-the-fit-examples">5. eg, or the FIT <a class="reference" href="FIT_Examples.htm">Examples</a>.</a></h1>
<blockquote>
There are numerous examples scattered throughout the directories. The eg directory
contains many of the examples shipped with the original version of FIT; most of them
work.</blockquote>
</div>
<div class="section" id="documentation">
<h1><a class="toc-backref" href="#id35" name="documentation">6. Documentation.</a></h1>
<blockquote>
<p>All of the basic PyFit documentation is in the Doc directory. The root of the HTML tree is
AAStart.htm, which is not entirely intuitive. The odd name puts the root at 
the top of the directory, where it belongs.</p>
<p>The source is in the DocSource directory. It uses the Docutils package. The DocSource
directory also contains a make.py script and an html2.cmd script. The first is a trivial
make utility that checks if a file has been updated before running docutils. The second
is the script that actually invokes Docutils. If you're not running Windows XP, you'll 
need to change this to whatever your scripting language needs.</p>
<p>Docutils is not part of the normal Python distribution; you need to get the current
version from Sourceforge.</p>
<p>There is extensive documentation on FitLibrary in the FitLib directory. This is
accessable for batch. It has not been converted from its Java origins to becoming
Python-centric. The FitNesse version of the documentation comes with FitNesse release
20050405 and later. The FitNesse version of the specification tests must be downloaded
from SourceForge.</p>
</blockquote>
</div>
<div class="section" id="tests">
<h1><a class="toc-backref" href="#id36" name="tests">7. Tests.</a></h1>
<p>There are a variety of tests in the tests subdirectory. This directory also contains a number of Windows XP command files that I use to run the unit and acceptance tests. They're set up to use the 'cmd1.cmd' command file to create a command window. Double clicking on this file will open a properly set up command window where the rest of the testing commands can be entered.</p>
<p>The &quot;ab.cmd prod&quot; script runs all of the unit and acceptance tests that don't require FitNesse to be up. This script contains mostly python commands. For use on Windows, it requires the location of your Python installation. Since it's essentially a list of python execution commands, it should be very easy to convert to the shell scripting host of choice for non Windows systems. Please report any problems that this script reports; I don't have access to non-windows systems to test.</p>
<p>The 'a all', 'a allp2 and 't all' commands run the batch acceptance and unit tests. Both sets should run without failures. Both the 'a all' and 'a allp2' commands use a file list to pick out the tests to run.</p>
<p>The 'flt all' and 'fla +r all' commands run the Fit Library unit and specification tests. The unit tests run without failures, the specification tests should end with 207 successes, no failures and no exceptions. There is a file in fitLib that explains each of the five tests that were removed from the test suite, as well as the 16 tests that were modified.</p>
<p>The spec1_1 command file runs the FIT 1.1 specification tests. This test should end with 3 successes and 1 failure; the failure is due to the inclusion of some speculative work in one of the tests that are not expected to pass. (In fact, the fixtures don't exist!) You will need to manually inspect the test results to determine whether all of the manditory tests passed.</p>
<p>The 'fnt all', fna c1f and 'fna row' commands run the FitNesse tests. Your FitNesse installation must be up and running for the last two of these to succeed; the unit tests do not need FitNesse. The TestRunner commands in the fna.cmd file may need to be changed if your FitNesse installation is not at port 80 on localhost. At the moment, not all of the FitNesse specification tests have been implemented; I don't know when that will be corrected.</p>
</div>
</div>
</body>
</html>
